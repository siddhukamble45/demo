name: test-paig-securechat upload to PyPI and DockerHub

on:
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4  # Ensure the repo is checked out

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python3 -m pip install virtualenv
        virtualenv -p python3 venv && . venv/bin/activate
        pip install twine build pytest pytest-cov
        pip install -r paig-securechat/web-server/requirements.txt

    - name: Test with pytest
      run: |
        filepath=$PWD
        . venv/bin/activate && paig-securechat/web-server/src/paig_securechat
        python3 -m pytest --cov="." --cov-report term --cov-report xml:$filepath/coverage.xml --junitxml=$filepath/junit.xml tests

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: junit-results
        path: junit.xml

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: https://registry.npmjs.org/

    - name: Install Node.js dependencies, build UI and copy sales data
      run: |
        cd paig-securechat/scripts
        sh build_ui.sh

    - name: Build the wheel
      run: |
        . venv/bin/activate
        cd paig-securechat
        python3 -m build -w

    - name: Install created package
      run: |
        rm -rf venv
        virtualenv -p python3 venv && . venv/bin/activate
        cd paig-securechat
        pip install dist/*.whl

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3  # Logs into Docker Hub using secrets.
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Read Version from pom.xml
      id: get_version
      run: |
        VERSION=$(grep -oPm1 "(?<=<revision>)[^<]+" ./paig-securechat/pom.xml)
        echo "Extracted Version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./paig-securechat/docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/user_manager:${{ env.VERSION }}